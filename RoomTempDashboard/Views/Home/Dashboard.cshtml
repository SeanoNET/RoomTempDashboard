@{
    ViewData["Title"] = "Dashboard";
}



<div id="data" class="data-group">
    <label class="data-value">Current</label><br />
    <label class="data-value primary" id="temp">30</label><span>C</span>
    <label class="data-value secondary" id="humidity">10</label><span>%</span>
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>

    // Connect to the SignalR hub
    var connection = new signalR.HubConnectionBuilder().withUrl("/dataHub").build();

    // SignalR events
    connection.on("GetCurrentValues", function (json) {
        var data = JSON.parse(json);

        document.getElementById("temp").innerText = `${parseFloat(data.Temperature).toFixed(2)}`;
        document.getElementById("humidity").innerText = `${parseFloat(data.Humidity).toFixed(2)}`;
    });





    $(document).ready(function () {
        // Start SignalR connection
        connection.start().then(function () {
            // Fix for selected delay
            getData(0);
            createOrChangePing(5000);

        }).catch((err) => { return console.error(err); });

    });



    // Restart connection when refresh rate changes TODO: find a better way?
    $('#refreshRate').on('change', function (event) {
        var rate = $(this).children("option:selected").val();


        if (connection.state === 1) {
            // Fix for selected delay
            getData(0);
            createOrChangePing(rate);
        } else {
            // Show disconnected status
        }

    });


    var totalRunningPings = 0;
    var ping = null;

    // Restarts or starts get data refresh
    function createOrChangePing(rate) {

        if (totalRunningPings != 0)
            stopPing();

        totalRunningPings++;
        currentRate = rate;
        ping = setInterval(getData, rate, currentRate);
    }

    function stopPing() {
        clearInterval(ping);
        totalRunningPings--;
        console.log("Stopped ping");
    }

    function getData(currentRate) {
        console.log(`Call GetCurrentValues every ${currentRate}ms - total running: ${totalRunningPings}`);
        connection.invoke("GetCurrentValues").catch((err) => { console.error(err); });
    }

</script>